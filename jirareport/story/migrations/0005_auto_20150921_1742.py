# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations

def import_stories(apps, schema_editor):
    Epic = apps.get_model("story", "Epic")
    Story = apps.get_model("story", "Story")
    
    e=Epic.objects.get(title='Create a new instance of ACS');Story(key='SRMF-4',title='Test successful creation of new ACS instance',epic=e).save()
    e=Epic.objects.get(title='Create a new instance of ACS');Story(key='SRMF-5',title='Test failed creation of new ACS instance',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-6',title='Test successful framework release upgrade (Load)',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-7',title='Test successful framework release downgrade (Fallback)',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-8',title='Test failed framework release upgrade (Load)',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-9',title='Test failed framework release downgrade (Fallback)',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-12',title='Search logs for OBE flow',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-13',title='Search logs for Admin portal flow',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-14',title='Validate logs retention period',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-15',title='Validate logs search criteria',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-16',title='Test availability of past search results',epic=e).save()
    e=Epic.objects.get(title='Display the topology of a DataCenters');Story(key='SRMF-18',title='Display Isolation zone topology',epic=e).save()
    e=Epic.objects.get(title='Display the topology of a DataCenters');Story(key='SRMF-19',title='Display POD topology',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-21',title='Test detection of core dump',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-22',title='OTF-SvcBE:Create an instance of a new POD containing it',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-59',title='OTF-SvcBE:Create several instances of a pod containing it',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-89',title='OTF-SvcBE:Application check-out failing',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-25',title='JBoss:Create an instance of a new POD',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-60',title='JBoss:Create several instances of a POD containing it',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-26',title='Apache:Create an instance of a new POD',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-90',title='Apache:Create several instances of a POD containing it',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-27',title='GQSDaemon:Create an instance of a new POD',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-92',title='TimeInitDaemon:Create an instance of a POD containing it',epic=e).save()
    e=Epic.objects.get(title='Create a couchbase cluster');Story(key='SRMF-50',title='Couchbase cluster creation suceed',epic=e).save()
    e=Epic.objects.get(title='Create a couchbase cluster');Story(key='SRMF-51',title='Couchbase cluster creation failed',epic=e).save()
    e=Epic.objects.get(title='Create an Oracle Cluster');Story(key='SRMF-53',title='Oracle cluster creation succeeded',epic=e).save()
    e=Epic.objects.get(title='Create an Oracle Cluster');Story(key='SRMF-54',title='Oracle cluster creation failed',epic=e).save()
    e=Epic.objects.get(title='Administrate applications queues (LQS/GQS)');Story(key='SRMF-56',title='Count item in a queue',epic=e).save()
    e=Epic.objects.get(title='Administrate applications queues (LQS/GQS)');Story(key='SRMF-57',title='Purge queue',epic=e).save()
    e=Epic.objects.get(title='Administrate applications queues (LQS/GQS)');Story(key='SRMF-58',title='Delete a given item in the queue',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-61',title='RepeatableDaemon:Create several instances of a POD containing it',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-62',title='UniqueDaemon:Create an instance of a POD containing it',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-93',title='UniqueDaemon:Create the POD with several instance',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-29',title='Logging Pod:Create several instances of a POD containing it',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-30',title='AcsServer:Create an instance of a new POD',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-31',title='GQS:Create an instance of a new POD',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-63',title='GQS:Create the POD with several instance',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-32',title='G-ESB:Create an instance of a new POD type',epic=e).save()
    e=Epic.objects.get(title='Check the health status of functional queues (LQS/GQS)');Story(key='SRMF-76',title='Check functional queues metrics are displayed in a graph',epic=e).save()
    e=Epic.objects.get(title='Check the health status of functional queues (LQS/GQS)');Story(key='SRMF-77',title='Check functional queues status is provided',epic=e).save()
    e=Epic.objects.get(title='Check the health status of a Couchbase Cluster');Story(key='SRMF-78',title='Check couchbase metrics',epic=e).save()
    e=Epic.objects.get(title='Check the health status of an Oracle Cluster');Story(key='SRMF-79',title='Check Oracle metrics',epic=e).save()
    e=Epic.objects.get(title='Check the health status of the DataCenter');Story(key='SRMF-80',title='Check service health',epic=e).save()
    e=Epic.objects.get(title='Check the health status of the DataCenter');Story(key='SRMF-81',title='Check system metrics',epic=e).save()
    e=Epic.objects.get(title='Fail-Over the Oracle instance');Story(key='SRMF-83',title='Role switch successful',epic=e).save()
    e=Epic.objects.get(title='Fail-Over the Oracle instance');Story(key='SRMF-84',title='Role switch failed',epic=e).save()
    e=Epic.objects.get(title='Couchbase Backup');Story(key='SRMF-86',title='List Available Couchbase Backup',epic=e).save()
    e=Epic.objects.get(title='Couchbase Backup');Story(key='SRMF-87',title='Backup a Couchbase instance',epic=e).save()
    e=Epic.objects.get(title='Couchbase Backup');Story(key='SRMF-88',title='Restore a Couchbase instance',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-94',title='OTF-BE:Dismantle a POD',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-95',title='JBoss:Dismantle a POD',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-96',title='Apache:Dismantle a POD',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-97',title='GQSDaemon:Dismantle a POD containing it',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-98',title='UniqueDaemon:Dismantle a POD containing it',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-99',title='Logging POD:Dismantle a POD',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-100',title='AcsServer:Dismantle a POD',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-101',title='GQS:Dismantle a POD',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-102',title='G-ESB:Dismantle a POD',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-103',title='OTF-SvcBE:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-104',title='JBoss:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-105',title='Apache:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-106',title='GQSDaemon:Deploy a new version of POD containing it',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-107',title='UniqueDaemon:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-108',title='Logserver POD:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-109',title='AcsServer:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-110',title='GQS:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-111',title='G-ESB:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-113',title='ServiceRegistery:Create a new POD',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-114',title='ServiceRegistery:Create the POD with several instances',epic=e).save()
    e=Epic.objects.get(title='Initialize a new Datacenter');Story(key='SRMF-117',title='Initialize a Datacenter',epic=e).save()
    e=Epic.objects.get(title='Recover the GQS node');Story(key='SRMF-119',title='Restart of the process',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-120',title='FDF:Create an instance of a new POD',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-121',title='FDF:Create several instances of a POD containing it',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-123',title='ServiceRegistery:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Modify size of Couchbase environment');Story(key='SRMF-124',title='Addition of a new set of machines into a CouchBase cluster',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback Couchbase releases');Story(key='SRMF-126',title='Activate a new version of CouchBase',epic=e).save()
    e=Epic.objects.get(title='Modify size of Couchbase environment');Story(key='SRMF-125',title='Deletion of an existing set of machines from a CouchBase cluster',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback Couchbase releases');Story(key='SRMF-127',title='Fallback an existing version of CouchBase',epic=e).save()
    e=Epic.objects.get(title='Create a new Isolation Zone');Story(key='SRMF-133',title='Isolation Zone deployment failure',epic=e).save()
    e=Epic.objects.get(title='Apply a configuration change');Story(key='SRMF-138',title='Change internal traffic routing',epic=e).save()
    e=Epic.objects.get(title='Apply a configuration change');Story(key='SRMF-139',title='Change client call settings',epic=e).save()
    e=Epic.objects.get(title='Fallback a configuration change');Story(key='SRMF-140',title='Change client call settings',epic=e).save()
    e=Epic.objects.get(title='Fallback a configuration change');Story(key='SRMF-141',title='Change internal traffic routing',epic=e).save()
    e=Epic.objects.get(title='Have a proper way to manage configuration specific to a given system');Story(key='SRMF-142',title='Target proper \'master\' files for FDF depending on environment',epic=e).save()
    e=Epic.objects.get(title='Have a proper way to manage configuration specific to a given system');Story(key='SRMF-143',title='Be able to change Oracle password',epic=e).save()
    e=Epic.objects.get(title='Have a proper way to manage configuration specific to a given system');Story(key='SRMF-144',title='Be able to change CouchBase password',epic=e).save()
    e=Epic.objects.get(title='Have a proper way to manage configuration specific to a given system');Story(key='SRMF-145',title='Change tnsnames.ora files',epic=e).save()
    e=Epic.objects.get(title='Create a couchbase cluster');Story(key='SRMF-146',title='Have CouchBase cluster registered in the Service Registry',epic=e).save()
    e=Epic.objects.get(title='Create an Oracle Cluster');Story(key='SRMF-147',title='Have Oracle registered in the Service Registry',epic=e).save()
    e=Epic.objects.get(title='Create a new Isolation Zone');Story(key='SRMF-155',title='Test injection of external traffic (from outside the stack)',epic=e).save()
    e=Epic.objects.get(title='Create a new Isolation Zone');Story(key='SRMF-156',title='Create an Isolation Zone (DUM OBE)',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-157',title='FDF:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-158',title='FDF:Dismantle a POD',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-159',title='APA:Dismantle a POD',epic=e).save()
    e=Epic.objects.get(title='Deploy a new version of POD');Story(key='SRMF-160',title='APA:Deploy a new version of POD',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-162',title='APA:Create the POD with several instances',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-163',title='APA:Create an instance of a new POD',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing Izolation Zone');Story(key='SRMF-164',title='Dismantle an Isolation Zone (DUM OBE)',epic=e).save()
    e=Epic.objects.get(title='Dismantle an existing POD');Story(key='SRMF-172',title='Service registry: Dismantle an existing pod',epic=e).save()
    e=Epic.objects.get(title='Create a new instance of ACS');Story(key='SRMF-181',title='Get status on Puppet job(s)',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-188',title='Bad Blueprint : Invalid json format',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-189',title='Bad Blueprint : Missing mandatory parameter in blueprint',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-190',title='Bad Blueprint : Bad data types in blueprint',epic=e).save()
    e=Epic.objects.get(title='Create a new POD');Story(key='SRMF-191',title='Bad Blueprint : Inconsistencies between POD/Service blueprints of a given component',epic=e).save()
    e=Epic.objects.get(title='Create a new Isolation Zone');Story(key='SRMF-197',title='Injection from within the OShift cluster (continuous injection)',epic=e).save()
    e=Epic.objects.get(title='Create a new Isolation Zone');Story(key='SRMF-198',title='Test injection of external traffic (from within the stack)',epic=e).save()
    e=Epic.objects.get(title='Create a new Isolation Zone');Story(key='SRMF-199',title='Injection from within the OShift cluster (single message)',epic=e).save()
    e=Epic.objects.get(title='AHP:Shopping POD');Story(key='SRMF-214',title='AHP:Create a new Shopping POD - single instance',epic=e).save()
    e=Epic.objects.get(title='AHP:Shopping POD');Story(key='SRMF-215',title='AHP:Create a new Shopping POD - multi instance',epic=e).save()
    e=Epic.objects.get(title='AHP:Shopping POD');Story(key='SRMF-216',title='AHP:Load a new version of Shopping POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Shopping POD');Story(key='SRMF-217',title='AHP:Inject traffic internally on the Shopping POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Shopping POD');Story(key='SRMF-218',title='AHP:Inject traffic externally on Shopping POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Booking POD');Story(key='SRMF-220',title='AHP:Create a new Booking POD - single instance',epic=e).save()
    e=Epic.objects.get(title='AHP:Booking POD');Story(key='SRMF-221',title='AHP:Create a new Booking POD - multi instance',epic=e).save()
    e=Epic.objects.get(title='AHP:Booking POD');Story(key='SRMF-222',title='AHP:Load a new version of Booking POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Booking POD');Story(key='SRMF-223',title='AHP:Inject traffic internally on the Booking POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Booking POD');Story(key='SRMF-224',title='AHP:Inject traffic externally on Booking POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Data Management POD');Story(key='SRMF-226',title='AHP:Create a new Data Management POD - single instance',epic=e).save()
    e=Epic.objects.get(title='AHP:Data Management POD');Story(key='SRMF-227',title='AHP:Create a new Data Management POD - multi instance',epic=e).save()
    e=Epic.objects.get(title='AHP:Data Management POD');Story(key='SRMF-228',title='AHP:Load a new version of Data Management POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Data Management POD');Story(key='SRMF-229',title='AHP:Inject traffic internally on the Data Management POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Data Management POD');Story(key='SRMF-230',title='AHP:Inject traffic externally on the Data Management POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Admin Portal POD');Story(key='SRMF-232',title='AHP:Create a new Admin Portal POD - single instance',epic=e).save()
    e=Epic.objects.get(title='AHP:Admin Portal POD');Story(key='SRMF-233',title='AHP:Create a new Admin Portal POD - multi instance',epic=e).save()
    e=Epic.objects.get(title='AHP:Admin Portal POD');Story(key='SRMF-234',title='AHP:Load a new version of Admin Portal POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Admin Portal POD');Story(key='SRMF-235',title='AHP:Inject traffic internally on the Admin Portal POD',epic=e).save()
    e=Epic.objects.get(title='AHP:Admin Portal POD');Story(key='SRMF-236',title='AHP:Inject traffic externally on Admin Portal POD',epic=e).save()
    e=Epic.objects.get(title='AHP:CLP POD');Story(key='SRMF-238',title='AHP:Create a new CLP POD - single instance',epic=e).save()
    e=Epic.objects.get(title='AHP:CLP POD');Story(key='SRMF-239',title='AHP:Create a new CLP POD - multi instance',epic=e).save()
    e=Epic.objects.get(title='AHP:CLP POD');Story(key='SRMF-240',title='AHP:Load a new version of CLP POD',epic=e).save()
    e=Epic.objects.get(title='AHP:CLP POD');Story(key='SRMF-241',title='AHP:Inject traffic internally on the CLP POD',epic=e).save()
    e=Epic.objects.get(title='AHP:LSS POD');Story(key='SRMF-244',title='AHP:Create a new LSS POD - single instance',epic=e).save()
    e=Epic.objects.get(title='AHP:LSS POD');Story(key='SRMF-245',title='AHP:Create a new LSS POD - multi instance',epic=e).save()
    e=Epic.objects.get(title='AHP:LSS POD');Story(key='SRMF-246',title='AHP:Load a new version of LSS POD',epic=e).save()
    e=Epic.objects.get(title='AHP:LSS POD');Story(key='SRMF-247',title='AHP:Inject traffic internally on LSS POD',epic=e).save()
    e=Epic.objects.get(title='Inject traffic internally');Story(key='SRMF-252',title='APA:Inject traffic internally',epic=e).save()
    e=Epic.objects.get(title='Inject traffic internally');Story(key='SRMF-253',title='FDF:Inject traffic internally',epic=e).save()
    e=Epic.objects.get(title='Inject traffic internally');Story(key='SRMF-254',title='GQS:Inject traffic internally',epic=e).save()
    e=Epic.objects.get(title='Inject traffic externally');Story(key='SRMF-255',title='APA:Inject traffic externally',epic=e).save()
    e=Epic.objects.get(title='Inject traffic externally');Story(key='SRMF-256',title='FDF:Inject traffic externally',epic=e).save()
    e=Epic.objects.get(title='Inject traffic externally');Story(key='SRMF-257',title='GQS:Inject traffic externally',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-258',title='AHP:Create a new instance of the whole AHP',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-259',title='AHP:Load a new instance of the whole AHP',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-260',title='AHP:Monitoring is defined for AHP',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-261',title='AHP:Monitoring dashboard is implemented',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-262',title='AHP:Capabillity to track what version is loaded where ?',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-263',title='AHP:Log search',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-264',title='AHP:Define a way to get all admin UIs on the gateway',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-265',title='AHP:Clean-up and Security validation of the bootstrap',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-266',title='AHP:Create pseudo tooling for load',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-294',title='Determine Proper Tenant for S-Filer',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-296',title='Create S-Filer ACS Installer',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-297',title='Deploy an S-Filer Server',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-298',title='Dismantle an S-Filer Server',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-299',title='Deploy an S-Filer Gateway',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-300',title='Dismantle an S-Filer Gateway',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-301',title='Document S-Filer Configuration',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-302',title='Backup S-Filer Configuration',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-303',title='Restore S-Filer Configuration',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-304',title='Backup S-Filer Databases',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-305',title='Restore S-Filer Databases',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-306',title='Backup S-Filer Obfuscated File-Store',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-307',title='Restore S-Filer Obfuscated File-Store',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-308',title='Reconnect S-Filer Databases and Obfuscated File-Store',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-309',title='Check the Health Status of S-Filer',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-310',title='Check the Metrics of S-Filer',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-311',title='Document User Creation / Deactivation / Deletion / Key Reset',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-312',title='Create User & Key-pair',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-313',title='Document Binding to Platforms',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-314',title='Bind User/Community/Gateway to Platform',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-315',title='Receive File from Customer',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-316',title='Deliver File to Platform',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-317',title='Receive Report from Platform',epic=e).save()
    e=Epic.objects.get(title='HMP - Single S-Filer Deployment');Story(key='SRMF-318',title='Deliver Report to Customer',epic=e).save()
    e=Epic.objects.get(title='HMP - Redundant S-Filer Deployment');Story(key='SRMF-319',title='Fail-over S-Filer across Data-Centers',epic=e).save()
    e=Epic.objects.get(title='HMP - Redundant S-Filer Deployment');Story(key='SRMF-320',title='Register S-Filer in the Service Registry',epic=e).save()
    e=Epic.objects.get(title='HMP - Redundant S-Filer Deployment');Story(key='SRMF-321',title='Remove S-Filer from the Service Registry',epic=e).save()
    e=Epic.objects.get(title='HMP - Redundant S-Filer Deployment');Story(key='SRMF-322',title='Upgrade S-Filer Gateway',epic=e).save()
    e=Epic.objects.get(title='HMP - Redundant S-Filer Deployment');Story(key='SRMF-323',title='Upgrade S-Filer Server',epic=e).save()
    e=Epic.objects.get(title='HMP - Redundant S-Filer Deployment');Story(key='SRMF-324',title='Deploy Cluster-Aware S-Filer Update',epic=e).save()
    e=Epic.objects.get(title='HMP - Redundant S-Filer Deployment');Story(key='SRMF-325',title='Fail-over Cluster-Aware S-Filer within Data-Center',epic=e).save()
    e=Epic.objects.get(title='HMP - Redundant S-Filer Deployment');Story(key='SRMF-326',title='Rolling Update of Cluster-Aware S-Filer',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-395',title='Endurance - Ensure application able to run on a stable way for several days',epic=e).save()
    e=Epic.objects.get(title='AHP:Global Integration on ACS');Story(key='SRMF-396',title='Destructive test/monkey testing',epic=e).save()
    e=Epic.objects.get(title='Create a new Isolation Zone');Story(key='SRMF-447',title='Deploy a Repeatable Unit (based on acs_integration scripts)',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-448',title='Consolidated SI configuration view',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-449',title='Read only DB access - Couchbase',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-450',title='Topology view - what version is deployed where',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-451',title='Read only DB access - Oracle',epic=e).save()
    e=Epic.objects.get(title='Display the topology of a DataCenters');Story(key='SRMF-452',title='Display the RU topology',epic=e).save()
    e=Epic.objects.get(title='Display the topology of a DataCenters');Story(key='SRMF-453',title='Display all the environments available in the DC',epic=e).save()
    e=Epic.objects.get(title='Display the topology of a DataCenters');Story(key='SRMF-454',title='Display the global topology of all available Datacenters',epic=e).save()
    e=Epic.objects.get(title='Display the topology of a DataCenters');Story(key='SRMF-455',title='Display the SI configuration of a given POD',epic=e).save()
    e=Epic.objects.get(title='Display the topology of a DataCenters');Story(key='SRMF-456',title='Display the consolidated SI configuration for a given environment',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-457',title='Test detection of heap dumps',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-458',title='Grant access to core dumps',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-459',title='Grant access to heap dumps',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-460',title='Alerting on bootstrap component failure TBD',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-461',title='Alert on CPU consumption',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-462',title='Alert on MEM consumption',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-463',title='Alert on Network Bandwith consumption',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-464',title='Alert on SLA failures',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-465',title='Alert on RTO - HTTP',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-466',title='Alert on CONTROL - HTTP',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-467',title='Alert on CONTROL - XML',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-468',title='Alert on CONTROL - EDIFACT',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-469',title='Alert on RTO - XML',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-470',title='Alert on RTO - EDIFACT',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-471',title='Alert on disk spaces issues',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-472',title='Alert on SWAP memory usage',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-473',title='Alerting on LQS/GQS queues',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-474',title='Alert on inbound traffic per environment',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-475',title='Alert on outbound traffic per environment',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-476',title='Alert on Oracle metrics',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-477',title='Alert on Couchbase metrics',epic=e).save()
    e=Epic.objects.get(title='Couchbase Backup');Story(key='SRMF-478',title='Restore Couchbase backup - failure',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-479',title='Alert on Couchbase backup failures',epic=e).save()
    e=Epic.objects.get(title='Alerting on environment issues');Story(key='SRMF-480',title='Alert on Oracle backup failures',epic=e).save()
    e=Epic.objects.get(title='Isolate an Isolation Zone');Story(key='SRMF-481',title='Check the isolation of the SIZ is working (no more traffic on it)',epic=e).save()
    e=Epic.objects.get(title='Isolate an Isolation Zone');Story(key='SRMF-482',title='Check the isolation of the SIZ is working (no more traffic on it) - failure',epic=e).save()
    e=Epic.objects.get(title='Resume the traffic on a Zone');Story(key='SRMF-483',title='Check the SIZ is taking traffic again',epic=e).save()
    e=Epic.objects.get(title='Resume the traffic on a Zone');Story(key='SRMF-484',title='Check the SIZ is taking traffic again - failure',epic=e).save()
    e=Epic.objects.get(title='Force the propagation of a `static` fileset');Story(key='SRMF-485',title='Have a way to trigger the synchronisation and specify the version',epic=e).save()
    e=Epic.objects.get(title='Apply an online data change (DML) on Oracle');Story(key='SRMF-486',title='DML is applied - Success',epic=e).save()
    e=Epic.objects.get(title='Apply an online data change (DML) on Oracle');Story(key='SRMF-487',title='DML is applied - Failure',epic=e).save()
    e=Epic.objects.get(title='Fallback an online data change (DML) on Oracle');Story(key='SRMF-488',title='DML is fallen back - Success',epic=e).save()
    e=Epic.objects.get(title='Fallback an online data change (DML) on Oracle');Story(key='SRMF-489',title='DML is fallen back - failure',epic=e).save()
    e=Epic.objects.get(title='Oracle Backups');Story(key='SRMF-490',title='List Available Oracle Backups',epic=e).save()
    e=Epic.objects.get(title='Oracle Backups');Story(key='SRMF-491',title='Backup a Oracle instance - success',epic=e).save()
    e=Epic.objects.get(title='Oracle Backups');Story(key='SRMF-492',title='Backup a Oracle instance - failure',epic=e).save()
    e=Epic.objects.get(title='Oracle Backups');Story(key='SRMF-493',title='Restore a Oracle instance - success',epic=e).save()
    e=Epic.objects.get(title='Oracle Backups');Story(key='SRMF-494',title='Restore a Oracle instance - failure',epic=e).save()
    e=Epic.objects.get(title='Couchbase Backup');Story(key='SRMF-495',title='Backup a Couchbase instance - failure',epic=e).save()
    e=Epic.objects.get(title='Suspend traffic to a Silo');Story(key='SRMF-496',title='Suspend traffic to a POD - Success',epic=e).save()
    e=Epic.objects.get(title='Suspend traffic to a Silo');Story(key='SRMF-497',title='Suspend traffic to a POD - Failure',epic=e).save()
    e=Epic.objects.get(title='Resume the traffic to a Silo');Story(key='SRMF-498',title='Resume traffic to a POD - Success',epic=e).save()
    e=Epic.objects.get(title='Resume the traffic to a Silo');Story(key='SRMF-499',title='Resume traffic to a POD - Failure',epic=e).save()
    e=Epic.objects.get(title='Force the propagation of a `static` fileset');Story(key='SRMF-500',title='Have a way to trigger the synchronisation and specify the version - failure',epic=e).save()
    e=Epic.objects.get(title='Applying a DDL on Oracle');Story(key='SRMF-501',title='DDL on Oracle - Success',epic=e).save()
    e=Epic.objects.get(title='Applying a DDL on Oracle');Story(key='SRMF-502',title='DDL on Oracle - Failure',epic=e).save()
    e=Epic.objects.get(title='Falling Back a DDL in Oracle');Story(key='SRMF-503',title='Fallback DDL on Oracle - Success',epic=e).save()
    e=Epic.objects.get(title='Falling Back a DDL in Oracle');Story(key='SRMF-504',title='Fallback DDL on Oracle - Failure',epic=e).save()
    e=Epic.objects.get(title='Apply an online data change on Couchbase');Story(key='SRMF-505',title='Apply online data change on Couchbase - Success',epic=e).save()
    e=Epic.objects.get(title='Apply an online data change on Couchbase');Story(key='SRMF-506',title='Apply online data change on Couchbase - Failure',epic=e).save()
    e=Epic.objects.get(title='Fallback an online data change on Couchbase');Story(key='SRMF-507',title='Fallback online data change on Couchbase - Success',epic=e).save()
    e=Epic.objects.get(title='Fallback an online data change on Couchbase');Story(key='SRMF-508',title='Fallback online data change on Couchbase - Failure',epic=e).save()
    e=Epic.objects.get(title='Applying a new view document on CouchBase');Story(key='SRMF-509',title='Apply new document view on Couchbase - Success',epic=e).save()
    e=Epic.objects.get(title='Applying a new view document on CouchBase');Story(key='SRMF-510',title='Apply new document view on Couchbase - Failure',epic=e).save()
    e=Epic.objects.get(title='Removing an existing view document from CouchBase');Story(key='SRMF-511',title='Remove document view on Couchbase - Success',epic=e).save()
    e=Epic.objects.get(title='Removing an existing view document from CouchBase');Story(key='SRMF-512',title='Remove document view on Couchbase - Failure',epic=e).save()
    e=Epic.objects.get(title='Create a new DB component - Oracle');Story(key='SRMF-514',title='Create a new DB component - Success',epic=e).save()
    e=Epic.objects.get(title='Create a new DB component - Oracle');Story(key='SRMF-515',title='Create a new DB component - Failure',epic=e).save()
    e=Epic.objects.get(title='Remove a DB component - Oracle');Story(key='SRMF-517',title='Remove a DB component - Success',epic=e).save()
    e=Epic.objects.get(title='Remove a DB component - Oracle');Story(key='SRMF-518',title='Remove a DB component - Failure',epic=e).save()
    e=Epic.objects.get(title='Create new buckets - Couchbase');Story(key='SRMF-521',title='Create buckets - Success',epic=e).save()
    e=Epic.objects.get(title='Create new buckets - Couchbase');Story(key='SRMF-522',title='Create buckets - Failure',epic=e).save()
    e=Epic.objects.get(title='Remove buckets - Couchbase');Story(key='SRMF-523',title='Remove buckets - Success',epic=e).save()
    e=Epic.objects.get(title='Remove buckets - Couchbase');Story(key='SRMF-524',title='Remove buckets - Failure',epic=e).save()
    e=Epic.objects.get(title='Capability to configure the framework');Story(key='SRMF-526',title='Alerting configuration',epic=e).save()
    e=Epic.objects.get(title='Capability to configure the framework');Story(key='SRMF-527',title='Monitoring configuration',epic=e).save()
    e=Epic.objects.get(title='Capability to configure the framework');Story(key='SRMF-528',title='User access management - add',epic=e).save()
    e=Epic.objects.get(title='Capability to configure the framework');Story(key='SRMF-529',title='User access management - revoke',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-530',title='Apply NW changes - Success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-531',title='Apply NW changes - Failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-532',title='Apply Security Groups changes - Success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-533',title='Apply Security Groups changes - Failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-534',title='Apply Flavors changes - Success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-535',title='Apply Flavors changes - Failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-536',title='Apply Routers changes - Success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-537',title='Apply Routeurs changes - Failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-538',title='Apply Logical F5 changes - Success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-539',title='Apply Logical F5 changes - Failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-540',title='Apply user keys changes - Success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-541',title='Apply user keys changes - Failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-542',title='Apply ULF changes - Success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-543',title='Apply ULF changes - Failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-544',title='Fallback multiple versions in the past at once',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-545',title='Capability to specify the version in the past of the framework to load',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-546',title='Puppet load a new version - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-547',title='Puppet load a new version - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-548',title='Openshift load a new version - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-549',title='Openshift load a new version - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-550',title='MapR/Hadoop load a new version - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-551',title='MapR/Hadoop load a new version - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-552',title='Spark load a new version - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-553',title='Spark load a new version - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-554',title='Kafka load a new version - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-555',title='Kafka load a new version - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-556',title='Time series DB load a new version - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-557',title='Time series DB load a new version - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-558',title='Consul load a new version - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-559',title='Consul load a new version - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-560',title='Artifactory load a new version - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-561',title='Artifactory load a new version - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-562',title='acs_server/acs_client load a new version - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-563',title='acs_server/acs_client load a new version - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-564',title='acs_server/acs_client version fallback - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-565',title='acs_server/acs_client version fallback - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-566',title='Artifactory version fallback - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-567',title='Artifactory version fallback - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-568',title='Consul version fallback - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-569',title='Consul version fallback - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-570',title='Time Series DB version fallback - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-571',title='Time Series DB version fallback - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-572',title='Kafka version fallback - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-573',title='Kafka version fallback - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-574',title='Spark version fallback - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-575',title='Spark version fallback - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-576',title='MapR/Hadoop version fallback - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-577',title='MapR/Hadoop version fallback - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-578',title='Openshift version fallback - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-579',title='Openshift version fallback - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-580',title='Puppet version fallback - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-581',title='Puppet version fallback - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-582',title='Puppet scaling up - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-583',title='Puppet scaling up - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-584',title='Puppet scaling down - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-585',title='Puppet scaling down - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-586',title='Openshift scaling up - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-587',title='Openshift scaling up - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-588',title='Openshift scaling down - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-589',title='Openshift scaling down - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-590',title='MapR/Hadoop scaling up - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-591',title='MapR/Hadoop scaling up - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-592',title='MapR/Hadoop scaling down - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-593',title='MapR/Hadoop scaling down - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-594',title='Spark scaling up - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-595',title='Spark scaling up - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-596',title='Spark scaling down - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-597',title='Spark scaling down - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-598',title='Kafka scaling up - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-599',title='Kafka scaling up - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-600',title='Kafka scaling down - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-601',title='Kafka scaling down - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-602',title='Time Series DB scaling up - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-603',title='Time Series DB scaling up - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-604',title='Time Series DB scaling down - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-605',title='Time Series DB scaling down - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-606',title='Consul scaling up - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-607',title='Consul scaling up - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-608',title='Consul scaling down - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-609',title='Consul scaling down - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-610',title='Artifactory scaling up - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-611',title='Artifactory scaling up - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-612',title='Artifactory scaling down - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-613',title='Artifactory scaling down - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-614',title='acs_server/acs_client scaling up - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-615',title='acs_server/acs_client scaling up - failure',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-616',title='acs_server/acs_client scaling down - success',epic=e).save()
    e=Epic.objects.get(title='Apply and fallback bootstrap releases');Story(key='SRMF-617',title='acs_server/acs_client scaling down - failure',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-618',title='Access to logs for Puppet',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-619',title='Access to logs for OpenShift',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-620',title='Access to logs for MapR/Hadoop',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-621',title='Access to logs for Spark',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-622',title='Access to logs for Kafka',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-623',title='Access to logs for Time Series DB',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-624',title='Access to logs for Consul',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-625',title='Access to logs for Artifactory',epic=e).save()
    e=Epic.objects.get(title='Post incident investigation');Story(key='SRMF-626',title='Access to logs for acs_client/acs_server',epic=e).save()
    e=Epic.objects.get(title='Create a new Isolation Zone');Story(key='SRMF-627',title='Deploy a Repeatable Unit (based on acs_cli/acs_server)',epic=e).save()
    e=Epic.objects.get(title='Create a new Isolation Zone');Story(key='SRMF-628',title='Deploy several distinct Repeatable Units',epic=e).save()
    e=Epic.objects.get(title='Create a new instance of ACS');Story(key='SRMF-647',title='Creation of an environment with ACS server',epic=e).save()
    


class Migration(migrations.Migration):

    dependencies = [
        ('story', '0004_auto_20150921_1437'),
    ]

    operations = [
                  migrations.RunPython(import_stories),
    ]
